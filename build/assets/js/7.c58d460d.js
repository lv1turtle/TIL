(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{430:function(e,r,v){e.exports=v.p+"assets/img/envp.c40439c2.png"},431:function(e,r,v){e.exports=v.p+"assets/img/shell.41ef8b14.png"},432:function(e,r,v){e.exports=v.p+"assets/img/child.e26af269.png"},472:function(e,r,v){"use strict";v.r(r);var s=v(65),a=Object(s.a)({},(function(){var e=this,r=e.$createElement,s=e._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"environment-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#environment-variables"}},[e._v("#")]),e._v(" Environment Variables")]),e._v(" "),s("h2",{attrs:{id:"environment-variables-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#environment-variables-2"}},[e._v("#")]),e._v(" Environment variables")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("어떤 프로세스가 동작할떄 동작하는 환경 요소 중 하나 (동적 변수)")])]),e._v(" "),s("li",[s("p",[e._v("ex) PATH (program이 어디있는지 찾는데 사용되는 환경 변수)")])])]),e._v(" "),s("h2",{attrs:{id:"how-does-a-process-get-environment-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-does-a-process-get-environment-variables"}},[e._v("#")]),e._v(" How does a process get environment variables?")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("fork()를 사용하여 new process를 생성할 떄, child process가 parent process의 환경 변수를 이어받는다.")])]),e._v(" "),s("li",[s("p",[e._v("만약 process가 새로운 program을 동작시켰다면,\n"),s("br"),e._v("그 프로그램이 execve() system call을 사용했다면 메모리 공간이 덮여씌워지고 전의 모든 환경 변수가 사라진다.\n"),s("br"),e._v("execve()를 통해 특정 방법을 불러오면 한 process에서 다른 process로 환경 변수를 옮길 수 있다.")])])]),e._v(" "),s("p",[e._v("ex) int execve(const char *filename, "),s("B",[e._v("char *const envp[]")]),e._v(")")],1),e._v(" "),s("h2",{attrs:{id:"memory-location-for-environment-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#memory-location-for-environment-variables"}},[e._v("#")]),e._v(" Memory Location for Environment variables")]),e._v(" "),s("p",[s("img",{attrs:{src:v(430),alt:"image"}})]),e._v(" "),s("ul",[s("li",[s("p",[e._v("envp와 environ의 point는 처음에 같은 장소를 가리킨다.")])]),e._v(" "),s("li",[s("p",[e._v("envp는 오직 main function에서만 접근할 수 있는 반면, environ은 전역 변수이다.")])]),e._v(" "),s("li",[s("p",[e._v("환경 변수에서 변화가 생겼을 떄, 그 환경 변수가 저장된 장소는 heap으로 옮겨진다.")])]),e._v(" "),s("li",[s("p",[e._v("이러한 예에서 environ은 전역 변수이기에 변하지만 envp는 변하지 않는다.")])])]),e._v(" "),s("h2",{attrs:{id:"shell-variables-environment-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shell-variables-environment-variables"}},[e._v("#")]),e._v(" Shell variables & Environment variables")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("사람들은 shell변수와 환경 변수가 같다고 생각하지만 사실은 다르다.")])]),e._v(" "),s("li",[s("p",[e._v("shell variable :")]),e._v(" "),s("ul",[s("li",[e._v("쉘 내에서 사용하는 내부 변수")]),e._v(" "),s("li",[e._v("쉘은 사용자가 환경 변수를 생성, 할당, 삭제를 할 수 있게해주는 "),s("B",[e._v("built-in")]),e._v(" 명령어를 제공한다.")],1),e._v(" "),s("li",[e._v("ex) FOO=bar (FOO라는 환경 변수 생성), echo $FOO")])])]),e._v(" "),s("li",[s("p",[e._v("shell 프로그램이 시작할 때 환경 변수들을 복사하여 쉘 변수로 가져온다.")])]),e._v(" "),s("li",[s("p",[e._v("쉘 변수의 내용이 변경된다고 해서 전역 변수에 그 내용이 반영되는 것은 아니다.")])])]),e._v(" "),s("p",[s("img",{attrs:{src:v(431),alt:"image"}})]),e._v(" "),s("ul",[s("li",[s("p",[e._v("위 그림은 쉘 변수가 child process의 환경 변수에 어떻게 영향을 주는 지 보여준다.")])]),e._v(" "),s("li",[s("p",[e._v("또한 parent shell의 환경 변수가 어떻게 child procces의 환경 변수가 되는지 보여준다.")])]),e._v(" "),s("li",[s("p",[e._v("즉, 사용자가 쉘 변수를 export한 것과 환경 변수를 쉘 변수로 복사한 것이 child process에 상속된다.")]),e._v(" "),s("ul",[s("li",[s("p",[s("img",{attrs:{src:v(432),alt:"image"}})])]),e._v(" "),s("li",[s("p",[e._v("env는 shell이 child process를 생성하게 만든다.")])]),e._v(" "),s("li",[s("p",[e._v("위 코드에서 볼 수 있듯이 env | grep LOGNAME 명령어 이후에는 child process에 진입한 것이다.")])]),e._v(" "),s("li",[s("p",[e._v("따라서 shell에 copy된 Environment variable "),s("B",[e._v("LOGNAME")]),e._v("과 export한 shell variable "),s("B",[e._v("LOGNAME3")]),e._v("만 출력 된것을 확인할 수 있다.")],1)]),e._v(" "),s("li",[s("p",[e._v("LOGNAME2는 user-defined variable이지만 export를 하지않았기에 child process에 상속되지않았다.")])])])])])])}),[],!1,null,null,null);r.default=a.exports}}]);