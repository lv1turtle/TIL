(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{433:function(e,t,a){e.exports=a.p+"assets/img/super.b52edef9.png"},434:function(e,t,a){e.exports=a.p+"assets/img/attack.309e57ab.png"},435:function(e,t,a){e.exports=a.p+"assets/img/userinput.214534ba.png"},436:function(e,t,a){e.exports=a.p+"assets/img/capability1.322655b4.png"},437:function(e,t,a){e.exports=a.p+"assets/img/capability2.e9497987.png"},438:function(e,t,a){e.exports=a.p+"assets/img/invoke1.88c08411.png"},439:function(e,t,a){e.exports=a.p+"assets/img/invoke2.06bbf127.png"},440:function(e,t,a){e.exports=a.p+"assets/img/invoke3.bcb9db99.png"},475:function(e,t,a){"use strict";a.r(t);var s=a(65),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"setuid-02"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setuid-02"}},[e._v("#")]),e._v(" SetUID_02")]),e._v(" "),s("h2",{attrs:{id:"how-is-set-uid-secure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-is-set-uid-secure"}},[e._v("#")]),e._v(" How is Set-UID Secure?")]),e._v(" "),s("ul",[s("li",[e._v("일반 사용자들의 권한을 확대할 수 있는 기능을 가짐\n"),s("ul",[s("li",[s("p",[e._v("sudo 명령어처럼 직접적으로 권한(privilege)을 주는 것이 아닌 다른 방식을 사용")])]),e._v(" "),s("li",[s("p",[e._v("행동에 제약이 있음 ( Computer chips이 만든 superman과 유사 )")])]),e._v(" "),s("li",[s("p",[e._v("program을 Set-UID program으로 바꾸어 그 program의 실행에 한해서만 권한을 부여")])]),e._v(" "),s("li",[s("p",[e._v("그러나 program을 Set-UID program으로 바꾸면 안전하지 않은 것들도 있음 ex) /bin/sh")])])])])]),e._v(" "),s("h2",{attrs:{id:"attack-on-superman"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#attack-on-superman"}},[e._v("#")]),e._v(" Attack on Superman")]),e._v(" "),s("p",[s("img",{attrs:{src:a(433),alt:"image"}})]),e._v(" "),s("ul",[s("li",[s("p",[e._v("성에 인질이 납치되어있는 상황에 superman에게 북쪽으로 날아서 왼쪽으로 가서 성벽을 부수고 인질을 구하라고 명령했다고 가정하자")]),e._v(" "),s("ul",[s("li",[e._v("명령을 받는 superman이 나쁜 사람이고 지구 반대편에 있었다면 북쪽으로 날아서 왼쪽으로 가면 은행을 거쳐서 성벽에 도달하기에"),s("br"),e._v("\n그 과정 중에 은행을 털 수도 있다.")])])])]),e._v(" "),s("h2",{attrs:{id:"attack-surface-of-set-uid-programs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#attack-surface-of-set-uid-programs"}},[e._v("#")]),e._v(" Attack surface of Set-UID programs")]),e._v(" "),s("p",[s("img",{attrs:{src:a(434),alt:"image"}})]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("1. User inputs\n2. System inputs\n3. Environment variables\n4. Non-privileged Process (Controlled by User)\n")])])]),s("h4",{attrs:{id:"_1-user-inputs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-user-inputs"}},[e._v("#")]),e._v(" 1. User inputs")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("Buffer Overflow")])]),e._v(" "),s("li",[s("p",[e._v("Format String Vulnerability (User inputs을 string의 형태로 받았을 때 프로그램을 변경)")])]),e._v(" "),s("li",[s("p",[e._v("CHSH - Change shell")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("shell programs의 default를 변경할 수 있는 능력을 가진 Set-UID program이 있을 때")])]),e._v(" "),s("li",[s("p",[e._v("shell programs이 /etc/passwd 파일 안에 저장되있으므로 아래 공격이 가능")])]),e._v(" "),s("li",[s("p",[e._v("Attack\n"),s("img",{attrs:{src:a(435),alt:"image"}})])]),e._v(" "),s("li",[s("p",[e._v("이와 같은 공격으로 정상적인 줄과 비정상적인 줄을 입력하여 (UID, GID)의 필드에 0을 넣는다면 root계정을 생성할 수 있다.")])])])])]),e._v(" "),s("h4",{attrs:{id:"_2-system-inputs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-system-inputs"}},[e._v("#")]),e._v(" 2. System inputs")]),e._v(" "),s("ul",[s("li",[e._v("Race condition")])]),e._v(" "),s("h4",{attrs:{id:"_3-environment-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-environment-variables"}},[e._v("#")]),e._v(" 3. Environment Variables")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("PATH Environment Variable")]),e._v(" "),s("ul",[s("li",[e._v("PATH : 사용자가 command에 전체 경로를 제공하지 않았을 때 shell program에서 command를 찾기 위해 사용되는 것")]),e._v(" "),s("li",[e._v("system() : /bin/sh에서 처음으로 호출됨")]),e._v(" "),s("li",[e._v('system("ls")\n'),s("ul",[s("li",[e._v('/bin/sh에서는 "ls"를 실행하기 위해 PATH 환경 변수를 사용')]),e._v(" "),s("li",[e._v('Attacker가 이 PATH 변수를 조작할 수 있고 "ls"명령을 찾는 방법을 조작할 수 있음')])])]),e._v(" "),s("li",[e._v("ex)"),s("div",{staticClass:"language-<python> extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    cd /home/attacker\n    vi attack.c\n    gcc -o ls attack.c\n    export PATH=/home/attacker/:$PATH:/home/user/bin\n")])])]),e._v("Attacker가 home밑에 attack파일을 만들고 그 실행 파일 이름을 ls라고 한다."),s("br"),e._v("\nPATH환경변수를 조작하여 경로를 /bin경로를 /home/attacker로 바꿔버리면"),s("br"),e._v("\n/home/attacker/ls가 실행되어 공격할 수 있다."),s("br")])])]),e._v(" "),s("li",[s("p",[e._v("Capability Leaking")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("때떄로, 프로그램을 실행하는 도중 프로그램의 권한을 downgrade하는 경우도 있다. (이때, 취약점 발생)")])]),e._v(" "),s("li",[s("p",[e._v("예를 들어, su를 사용하는 program의 경우")]),e._v(" "),s("ul",[s("li",[e._v("그 program이 Set-UID program라 가정")]),e._v(" "),s("li",[e._v("su를 사용해 user1(사용자)를 user2(다른 사용자)로 교체하면")]),e._v(" "),s("li",[e._v("Program이 시작할 때는 EUID는 root, RUID는 user1으로 설정 되었으나")]),e._v(" "),s("li",[e._v("password 인증 후에 EUID,RUID 모두 user2로 권한이 downgrade된다.")])])]),e._v(" "),s("li",[s("p",[e._v("이런 프로그램들은 아마 downgrade하기 전에 권한에 대한 capability를 정리하지 않았을 것이기에 "),s("B",[e._v("capability leaking")]),e._v("을 유발한다.")],1)]),e._v(" "),s("li",[s("p",[e._v("e.g.)\n"),s("img",{attrs:{src:a(436),alt:"image"}})]),e._v(" "),s("p",[e._v("/etc/zzz는 root권한으로만 write가 가능하기에 root권한으로 이 프로그램을 동작시켜야한다."),s("br"),e._v("\nopen에 성공하면 fd = 3이 되며 그 후에 privileged capabilites에 대한 별도의 clean up을 하지않고 "),s("br"),e._v("\nsetuid bit(euid)에 real uid값을 넣어준다. (이때, 실행하는 사람은 root가 아니므로 이는 downgrade) "),s("br"),e._v("\n그리고 /bin/sh를 실행해 새로운 shell을 불러온다. "),s("br"),e._v("\n위에서 말했듯이 별도의 clean up을 하지않았기에 이 shell(process)는 프로그램의 권한을 그대로 물려받는다."),s("br"),e._v("\n결국 root권한을 가진 채로 shell이 실행되어 아래와 같은 일이 발생한다."),s("br")]),e._v(" "),s("p",[s("img",{attrs:{src:a(437),alt:"image"}})]),e._v(" "),s("p",[e._v("fd = 3이 되었으므로 /etc/zzz가 3과 같다."),s("br"),e._v("\necho ccccccccc >& 3이 permission denied가 되지않고 정상적으로 동작하여 /etc/zzz가 수정된 것을 확인할 수 있다."),s("br")])]),e._v(" "),s("li",[s("p",[e._v("해결법은 권한을 downgrade하기 전에 file descriptor를 없애서 capability를 clean up해주는 것이다.")])])])]),e._v(" "),s("li",[s("p",[e._v("Invoking Programs")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("프로그램 내에서 외부 명령어를 수행했을 때 발생하는 취약점")])]),e._v(" "),s("li",[s("p",[e._v("Set-UID 프로그램 내에서 외부 명령어가 수행될 시 안전하지 않을 수 있음")])]),e._v(" "),s("li",[s("p",[e._v("e.g.)\n"),s("img",{attrs:{src:a(438),alt:"image"}})]),e._v(" "),s("p",[e._v("이 프로그램은 root-owned Set-UID 프로그램이며 모든 파일을 볼 수 있지만 write는 불가능 "),s("br"),e._v("\n여기서 system()은 외부 명령어를 호출하는 기능을 한다."),s("br")]),e._v(" "),s("p",[s("img",{attrs:{src:a(439),alt:"image"}})]),e._v(" "),s("p",[e._v("이제 문제는 여기서 발생한다."),s("br"),e._v('\n이 프로그램의 입력으로 "aa;/bin/sh"를 집어넣어 root권한을 가진 shell을 얻을 수 있게된다.'),s("br"),e._v("\n왜 이런 현상이 발생했냐하면 system()이라는 함수는 code와 data를 구분하는 기능이 없기에"),s("br"),e._v('\n"aa;/bin/sh"가 data 영역이 아닌 code 영역으로 들어가 프로그램이 shell을 실행해버린 것이다.'),s("br")]),e._v(" "),s("p",[s("img",{attrs:{src:a(440),alt:"image"}})]),e._v(" "),s("p",[e._v("위에서 발생한 문제의 원인은 system()이 code와 data를 구분을 하지못한 것 이기에\ncode와 data영역을 나누어주는 execve()를 사용해준다면 안전하게 사용할 수 있다.")])])])])]),e._v(" "),s("h2",{attrs:{id:"principle-of-least-privilege"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#principle-of-least-privilege"}},[e._v("#")]),e._v(" Principle of Least Privilege")]),e._v(" "),s("ul",[s("li",[e._v("Definition\n"),s("ul",[s("li",[e._v("Every program and every privileged user of the system should operate"),s("br"),e._v("\nusing the least amount of privileges necessary to complete the job")])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);